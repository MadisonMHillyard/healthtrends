{"version":3,"sources":["history.js","components/Footer.jsx","components/Header.jsx","components/WorkingPopup.jsx","components/DateInput.jsx","components/QueryForm.jsx","components/App.jsx","components/CovidMap.jsx","Routes.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["history","Component","WorkingPopup","React","props","message","this","folderLink","href","className","text","onClick","backToQuery","newQuery","$","require","numRegex","dateRegex","responseGoogle","response","console","log","QueryForm","state","showPopup","folder","spreadsheet","numRuns","freq","geo","startDate","endDate","numWeek","endToday","terms","err","getFolderLink","bind","handleInputChange","handleSubmit","handleDateChange","handleEndTodayChange","handleNumWeekChange","get","window","location","data","e","target","name","value","length","test","isFuture","parse","Date","alert","parseInt","setState","format","addWeeks","subWeeks","differenceInWeeks","loc_end","valid","Object","values","forEach","val","preventDefault","origin","num_runs","start_date","end_date","axios","defaults","xsrfCookieName","xsrfHeaderName","headers","post","then","res","validateInputs","togglePopup","role","onSubmit","type","placeholder","onChange","multiple","defaultValue","clientId","buttonText","onSuccess","onFailure","cookiePolicy","handleNewQuery","App","src","logo","alt","Button","variant","push","CovidMap","Routes","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.96b2d8d8.chunk.js","sourcesContent":["import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React, { Component } from 'react';\r\nexport default class Footer extends Component {\r\n    render() {\r\n       return (\r\n          <div className = 'container ui'>\r\n              <div className = 'footer'>\r\n                  <div>\r\n                      Need Help? email me here\r\n                  </div>\r\n                \r\n              </div>\r\n          </div>\r\n       )\r\n    }\r\n}","import React, { Component } from 'react';\r\nexport default class Header extends Component {\r\n    render() {\r\n       return (\r\n          <div className ='container ui'>\r\n              <div className = 'header'>\r\n                  <div>\r\n                      <h1>\r\n                          Health API Research Tool\r\n                      </h1>\r\n                  </div>\r\n                \r\n              </div>\r\n          </div>\r\n       )\r\n    }\r\n}","import React from 'react';    \r\n\r\nexport default class WorkingPopup extends React.Component {  \r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        const folderLink = this.props.folderLink;\r\n        let message;\r\n        if(folderLink){\r\n            message = <h3 href = {this.props.folderLink}>Folder Link</h3>;\r\n        } else {\r\n            message = <h3 className = 'status-bar'>working...</h3>;\r\n        }\r\n        return (  \r\n            <div className='popup'>  \r\n                <div className='popup-inner'> \r\n                    <div className='pi'>\r\n                        <div className = 'pi1'>\r\n                            <h1>{this.props.text}</h1>  \r\n                            <div>\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                        <div className = 'pi2'>\r\n                            <div className = ''>\r\n                                <button className = 'ui btn btn-primary btn-block' onClick={this.props.backToQuery}>Go Back to Query</button>\r\n                            </div>\r\n                            <div className = ''>\r\n                                <button className = 'ui btn btn-primary btn-block' onClick={this.props.newQuery}>New Query</button>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                </div>  \r\n            </div>  \r\n        );  \r\n    }  \r\n}  \r\n","import React from 'react';\r\nimport {format, addWeeks, subWeeks, parse, isFuture, differenceInWeeks} from 'date-fns'\r\n\r\nexport default class DateInput extends React.Component {\r\n    constructor(props){\r\n       super(props);\r\n       this.state = {numWeek: '',\r\n                    startDate: '',\r\n                    endDate: '',\r\n                    endToday: false,\r\n                    startDateError: '',\r\n                    endDateError:'',\r\n                    numWeekError:''\r\n                };\r\n\r\n       this.handleInputChange = this.handleInputChange.bind(this)\r\n       this.validateDateFormat = this.validateDateFormat.bind(this)\r\n    };\r\n\r\n    //Validate that the input is in the correct date format \r\n    validateDateFormat(date){\r\n        const d = date\r\n        //regular expression for mm/dd/yyyy (values are not checked)\r\n        var re = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/;\r\n        return re.test(d)? true: false;\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var loc_start = this.state.startDate;\r\n        var loc_end = this.state.endDate;\r\n        var err = ''\r\n        \r\n        //End Range Today checked\r\n        if(target.name === 'endToday'){\r\n            if(target.checked){\r\n                loc_end = format(new Date(),\"P\")\r\n                this.setState({\r\n                    endDate:loc_end,\r\n                    [name]:value\r\n                });\r\n            }\r\n            //if unchecked don't delete entry\r\n            this.setState({\r\n                [name]:value\r\n            });\r\n        }\r\n\r\n        //if number of weeks is defined\r\n        else if(target.name === 'numWeek'){\r\n            //if startDate is defined already\r\n            if (this.state.startDate !== '' && this.state.startDateError === ''){\r\n                loc_end = format(addWeeks(parse(this.state.startDate, 'MM/dd/yyyy', new Date()), value), \"P\");\r\n                \r\n                //check that endDate is not a future date\r\n                err = isFuture(parse(loc_end, 'MM/dd/yyyy', new Date())) ? 'End date cannot be a future date': '';\r\n                if(err){\r\n                    this.setState({\r\n                        [`${name}Error`]: err\r\n                    });  \r\n                }\r\n                else{\r\n                    this.setState({\r\n                        [name]: value,\r\n                        endDate: loc_end,\r\n                        [`${name}Error`]: err\r\n                    });\r\n                }\r\n                \r\n                \r\n            }\r\n            //if endDate is defined already with no start date\r\n            else if (this.state.endDate !== '' && this.state.endDateError === ''){\r\n                loc_start = format(subWeeks(parse(this.state.endDate, 'MM/dd/yyyy', new Date()), value), \"P\");\r\n                this.setState({\r\n                    [name]: value,\r\n                    startDate: loc_start\r\n                });\r\n            }\r\n            //if no dates have been defined\r\n            else{\r\n                loc_end = format(new Date(), \"P\");\r\n                loc_start = format(subWeeks(parse(loc_end, 'MM/dd/yyyy', new Date()), value), \"P\");\r\n                this.setState({\r\n                    [name]: value,\r\n                    startDate: loc_start,\r\n                    endDate: loc_end\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        //if dates are changed\r\n        else{\r\n            if(name ==='endDate'){\r\n                loc_end = value\r\n            }\r\n            if (name ==='startDate'){\r\n                loc_start = value\r\n            }\r\n            this.setState({[name]:value});\r\n            err = this.validateDateFormat(value)? isFuture(parse(value, 'MM/dd/yyyy', new Date())) ? 'Date cannot be a future date': '':'Date must be in MM/DD/YYYY format';\r\n            this.setState({\r\n                [`${name}Error`]: err\r\n            });\r\n            \r\n            if(err === 'Date cannot be a future date'){\r\n                alert(err);\r\n            }\r\n        }\r\n\r\n\r\n        if(!err && (this.state.endDate || loc_start) && (this.state.endDate || loc_end) ){\r\n            this.setState({\r\n                numWeek:differenceInWeeks(parse(loc_end, 'MM/dd/yyyy', new Date()), parse(loc_start, 'MM/dd/yyyy', new Date()))\r\n            });\r\n            \r\n        }\r\n        //update parent component\r\n        if(!err){\r\n            this.props.action(loc_start, loc_end);\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <div className='date-range form-sec'>\r\n                <div className= 'date-level'>\r\n                    <div className = 'd1'>\r\n                        <div className = 'date-in'>\r\n                            <label>Start Date</label>\r\n                            <input \r\n                                type = 'text' \r\n                                name='startDate' \r\n                                className={`form-control date-input \r\n                                ${this.state.startDateError ? 'inval' :''}`}\r\n                                placeholder='mm/dd/yyyy'\r\n                                value = {this.state.startDate}\r\n                                onBlur = {this.validateDateFormat}\r\n                                onChange = {this.handleInputChange}/>\r\n                        </div>\r\n                        <span><h4>{this.state.startDateError}</h4></span>\r\n                        <div className = 'date-in'>\r\n                            <label>End Date</label>\r\n                            <input \r\n                                type = 'text' \r\n                                name='endDate' \r\n                                className={`form-control date-input \r\n                                ${this.state.endDateError ? 'inval' :''}`}\r\n                                placeholder='mm/dd/yyyy'\r\n                                value = {this.state.endDate}\r\n                                // onBlur = {this.validateDateFormat}\r\n                                onChange = {this.handleInputChange}/>\r\n                        </div>\r\n                        <span>{this.state.endDateError}</span>\r\n                    </div>\r\n                    <div className = 'd1'>\r\n                        <div className = 'date-level date-in'>\r\n                            <label>Number of Weeks</label>\r\n                            <input \r\n                                type = 'text'\r\n                                name = 'numWeek'\r\n                                className = 'form-control num-week-input date-input'\r\n                                placeholder = '# Weeks'\r\n                                value = {this.state.numWeek}\r\n                                onChange = {this.handleInputChange}/>\r\n                        </div>\r\n                        <div className= 'num-w'>\r\n                            <label>End Range Today</label>\r\n                            <input\r\n                                type = 'checkbox'\r\n                                name='endToday' \r\n                                className='form-control date-input endToday' \r\n                                value = {this.state.endToday}\r\n                                onChange = {this.handleInputChange}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                \r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport DateInput from './DateInput';\r\nimport WorkingPopup from './WorkingPopup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { format, addWeeks, subWeeks, parse, isFuture, differenceInWeeks } from 'date-fns'\r\nimport axios from \"axios\";\r\nimport GoogleLogin from 'react-google-login';\r\nimport getCookie from './../helper';\r\n\r\n\r\n\r\nvar $ = require('jquery');\r\nvar numRegex = /^\\d+/;\r\nvar dateRegex = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/;\r\nconst responseGoogle = (response) => {\r\n    console.log(response);\r\n  }\r\nexport default class QueryForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPopup: false,\r\n            folderLink: '',\r\n            folder: 'First Test',\r\n            spreadsheet: '',\r\n            numRuns: '',\r\n            freq: 'week',\r\n            geo: 'us',\r\n            startDate: '',\r\n            endDate: '',\r\n            numWeek: '',\r\n            endToday: false,\r\n            terms: '',\r\n            err: {\r\n                folder: '',\r\n                spreadsheet: '',\r\n                numRuns: '',\r\n                startDate: '',\r\n                endDate: '',\r\n                numWeek: '',\r\n                terms: '',\r\n            }\r\n        };\r\n\r\n        this.getFolderLink = this.getFolderLink.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleEndTodayChange = this.handleEndTodayChange.bind(this);\r\n        this.handleNumWeekChange = this.handleNumWeekChange.bind(this);\r\n        this.newQuery = this.newQuery.bind(this);\r\n    }\r\n\r\n    getFolderLink() {\r\n        $.get(window.location.href + 'api/submit', (data) => {\r\n            console.log(data);\r\n            //    this.personaliseGreeting(data);\r\n        });\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        const { name, value } = e.target;\r\n        let err = this.state.err;\r\n        console.log(name, value);\r\n        switch (name) {\r\n            case 'folder':\r\n                err.folder =\r\n                    value.length >= 1\r\n                        ? ''\r\n                        : 'Folder must be named';\r\n                break;\r\n            case 'spreadsheet':\r\n                err.spreadsheet =\r\n                    value.length >= 1\r\n                        ? ''\r\n                        : 'Spreadsheet must be named';\r\n                break\r\n            case 'terms':\r\n                err.terms =\r\n                    value.length >= 1\r\n                        ? ''\r\n                        : 'Terms must be added to search, separated by commas';\r\n                break\r\n            case 'numRuns':\r\n                err.numRuns =\r\n                    numRegex.test(value)\r\n                        ? ''\r\n                        : 'Must be a Number';\r\n                break;\r\n            case 'endToday':\r\n                this.handleEndTodayChange(value);\r\n                break;\r\n            case 'startDate':\r\n                err.startDate =\r\n                    dateRegex.test(value)\r\n                        ? isFuture(parse(value, 'MM/dd/yyyy', new Date()))\r\n                            ? 'Date cannot be a future date'\r\n                            : ''\r\n                        : 'Date must be in MM/DD/YYYY format';\r\n                if (err.startDate === 'Date cannot be a future date') {\r\n                    alert(err.startDate);\r\n                }\r\n                else {\r\n                    this.handleDateChange(name, value, err);\r\n                }\r\n\r\n                break;\r\n            case 'endDate':\r\n                err.endDate =\r\n                    dateRegex.test(value)\r\n                        ? isFuture(parse(value, 'MM/dd/yyyy', new Date()))\r\n                            ? 'Date cannot be a future date'\r\n                            : ''\r\n                        : 'Date must be in MM/DD/YYYY format';\r\n                if (err.endDate === 'Date cannot be a future date') {\r\n                    alert(err.endDate);\r\n                }\r\n                else {\r\n                    this.handleDateChange(name, value, err);\r\n                }\r\n\r\n                break;\r\n            case 'numWeek':\r\n                err.numWeek =\r\n                    (parseInt(value) < 0) //maybe a or statement??\r\n                        ? ''\r\n                        : 'Number must be positive';\r\n                if (err.numWeek) {\r\n                    alert(err.numWeek);\r\n                }\r\n                else {\r\n                    this.handleNumWeekChange(value, err);\r\n                }\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            err,\r\n            [name]: value\r\n        });\r\n        console.log(err)\r\n    }\r\n\r\n    handleNumWeekChange(value, err) {\r\n        if (this.state.startDate && !this.state.err.startDate) {\r\n            var endDate = format(addWeeks(parse(this.state.startDate, 'MM/dd/yyyy', new Date()), value), \"P\");\r\n            err.numWeek = isFuture(parse(this.state.endDate, 'MM/dd/yyyy', new Date())) ? 'End date cannot be a future date' : '';\r\n            if (!err.numWeek) {\r\n                this.setState({\r\n                    endDate: endDate\r\n                });\r\n            }\r\n        }\r\n        else if (this.state.endDate && !this.state.err.endDate) {\r\n            var startDate = format(subWeeks(parse(this.state.endDate, 'MM/dd/yyyy', new Date()), value), \"P\");\r\n            this.setState({\r\n                startDate: startDate\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDateChange(name, value, err) {\r\n        if (!this.state.err.startDate && !this.state.err.endDate) {\r\n            var endDate = this.state.endDate;\r\n            var startDate = this.state.startDate;\r\n            var numWeek = this.state.numWeek;\r\n            //if endDate\r\n            if (this.state.startDate && name === 'endDate') {\r\n                endDate = value;\r\n                numWeek = differenceInWeeks(parse(endDate, 'MM/dd/yyyy', new Date()), parse(startDate, 'MM/dd/yyyy', new Date()))\r\n            }\r\n            //if stateDate\r\n            if (this.state.endDate && name === 'startDate') {\r\n                startDate = value;\r\n                numWeek = differenceInWeeks(parse(endDate, 'MM/dd/yyyy', new Date()), parse(startDate, 'MM/dd/yyyy', new Date()))\r\n            }\r\n\r\n            //if startDate is after endDate \r\n            err.numWeek =\r\n                (numWeek > 0 && numWeek)\r\n                    ? ''\r\n                    : 'Start Date must be before End Date';\r\n            if (err.numWeek && startDate && endDate) {\r\n                alert(err.numWeek);\r\n            }\r\n            this.setState({\r\n                err,\r\n                numWeek: numWeek\r\n            });\r\n        }\r\n        return;\r\n    }\r\n\r\n    handleEndTodayChange(value) {\r\n        if (value) {\r\n            var loc_end = format(new Date(), \"P\");\r\n            this.setState({\r\n                endDate: loc_end\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInputs(err) {\r\n        let valid = true;\r\n        Object.values(err).forEach(\r\n            (val) => val.length > 0 && (valid = false)\r\n        );\r\n        if (!(this.state.folder\r\n            && this.state.spreadsheet\r\n            && this.state.numRuns\r\n            && this.state.startDate\r\n            && this.state.endDate\r\n            && this.state.terms)) {\r\n            valid = false;\r\n        }\r\n        return valid;\r\n    }\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n        var url = window.location.origin + \"/api/submit\";\r\n        var folder = this.state.folder;\r\n        var spreadsheet = this.state.spreadsheet;\r\n        var numRuns = this.state.numRuns;\r\n        var freq = this.state.freq;\r\n        var geo = this.state.geo;\r\n        var startDate = this.state.startDate;\r\n        var endDate = this.state.endDate\r\n        var terms = this.state.terms;\r\n\r\n        var data = {\r\n            folder: folder,\r\n            spreadsheet: spreadsheet,\r\n            num_runs: numRuns,\r\n            freq: freq,\r\n            geo: geo,\r\n            start_date: startDate,\r\n            end_date: endDate,\r\n            terms: terms\r\n        };\r\n\r\n        console.log('DATA', data);\r\n        // axios.defaults.headers.post['X-CSRF-Token'] = getCookie('csrftoken');\r\n        axios.defaults.xsrfCookieName = 'csrftoken'\r\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\"\r\n        axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n        axios\r\n            .post(\"http://127.0.0.1:8000/query\", data)\r\n            .then(res => {\r\n                alert(res.data)\r\n            })\r\n        // event.preventDefault();\r\n\r\n        // if(this.validateInputs(this.state.err)){\r\n        //     this.togglePopup(e);\r\n\r\n        //     $.ajax({\r\n        //         crossOrigin:true,\r\n        //         url:url,\r\n        //         dataType:'json',\r\n        //         type:'POST',\r\n        //         data: JSON.stringify(data),\r\n        //         contentType: 'application/json; charset=utf-8',\r\n        //         success: function(data){\r\n        //             this.setState({\r\n        //                 folderLink:data.message\r\n        //             });\r\n        //             // alert(data.message);\r\n        //         }.bind(this),\r\n        //         error: function(xhr, status, err){\r\n        //         alert('Poll creation failed: ' + err.toString());\r\n        //         }.bind(this)\r\n        //     });\r\n        // }\r\n        // else{\r\n        //     alert('Some fields have not been filled.')\r\n        // }\r\n    }\r\n\r\n    togglePopup(e) {\r\n        e.preventDefault();\r\n        console.log(\"TOGGLE POPUP\");\r\n        let val = this.validateInputs(this.state.err);\r\n        console.log(val);\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    newQuery() {\r\n        let err = this.state.err;\r\n        err.folder = '';\r\n        err.spreadsheet = '';\r\n        err.numRuns = '';\r\n        err.startDate = '';\r\n        err.endDate = '';\r\n        err.numWeek = '';\r\n        err.terms = '';\r\n        this.setState({\r\n            spreadsheet: '',\r\n            numRuns: '',\r\n            freq: '',\r\n            geo: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            numWeek: '',\r\n            endToday: false,\r\n            terms: '',\r\n        });\r\n    }\r\n\r\n    handleNewQuery(e) {\r\n        e.preventDefault();\r\n        console.log('in Handle new Query')\r\n        this.newQuery();\r\n        this.togglePopup(e);\r\n        console.log('end of handleNew query')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container text-box'>\r\n                <form className='ui form container' role='form' onSubmit={this.handleSubmit}>\r\n                    <h2>File Setup</h2>\r\n                    <div className='container drive-sec'>\r\n                        <div className='field'>\r\n                            <label>Folder Name</label>\r\n                            <input\r\n                                type='text'\r\n                                name='folder'\r\n                                className={`'form-control ' \r\n                                    ${this.state.err.folder ? 'inval' : ''}`}\r\n                                placeholder='Folder Name'\r\n                                onChange={this.handleInputChange} />\r\n                        </div>\r\n                        <div className='field'>\r\n                            <label>Spreadsheet Name</label>\r\n                            <input\r\n                                type='text'\r\n                                name='spreadsheet'\r\n                                className={`'form-control spreadsheet' \r\n                                    ${this.state.err.spreadsheet ? 'inval' : ''}`}\r\n                                placeholder='Spreadsheet Name'\r\n                                onChange={this.handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <h2>Query</h2>\r\n                    <div className='container '>\r\n\r\n                        <div className='form-sec form-sec-row'>\r\n                            <div className='field sub-sec-row'>\r\n                                <label>Number of Runs </label>\r\n                                <input\r\n                                    type='text'\r\n                                    name='numRuns'\r\n                                    className={`'form-control num-runs ' \r\n                                    ${this.state.err.numRuns ? 'inval' : ''}`}\r\n                                    placeholder='Number of Runs'\r\n                                    onChange={this.handleInputChange} />\r\n                            </div>\r\n                            <br />\r\n                            <div className='field sub-sec-row'>\r\n                                <label>Frequency</label>\r\n                                <select multiple=\"\" name='freq' className='ui dropdown form-control' onChange={this.handleInputChange}>\r\n                                    <option defaultValue value=\"week\">Week</option>\r\n                                    <option value=\"day\">Day</option>\r\n                                    <option value=\"month\">Month</option>\r\n                                    <option value=\"year\">Year</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='field sub-sec-row'>\r\n                                <label>Geographical Area </label>\r\n                                <select multiple=\"\" name='geo' className='ui dropdown form-control' onChange={this.handleInputChange}>\r\n                                    <option defaultValue value=\"US\">US</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-sec'>\r\n                            <div className='date-range form-sec'>\r\n                                <div className='date-level'>\r\n                                    <div className='d1'>\r\n                                        <div className='field date-in'>\r\n                                            <label>Start Date</label>\r\n                                            <input\r\n                                                type='text'\r\n                                                name='startDate'\r\n                                                className={`form-control date-input \r\n                                                ${this.state.err.startDate ? 'inval' : ''}`}\r\n                                                placeholder='mm/dd/yyyy'\r\n                                                value={this.state.startDate}\r\n                                                onChange={this.handleInputChange} />\r\n                                        </div>\r\n                                        <div className='field date-in'>\r\n                                            <label>End Date</label>\r\n                                            <input\r\n                                                type='text'\r\n                                                name='endDate'\r\n                                                className={`form-control date-input \r\n                                                ${this.state.err.endDate ? 'inval' : ''}`}\r\n                                                placeholder='mm/dd/yyyy'\r\n                                                value={this.state.endDate}\r\n                                                onChange={this.handleInputChange} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='d1'>\r\n                                        <div className='field date-level date-in'>\r\n                                            <label>Number of Weeks</label>\r\n                                            <input\r\n                                                type='text'\r\n                                                name='numWeek'\r\n                                                className={`'form-control num-week-input date-input'\r\n                                                ${this.state.err.numWeek ? 'inval' : ''}`}\r\n                                                placeholder='# Weeks'\r\n                                                value={this.state.numWeek}\r\n                                                onChange={this.handleInputChange} />\r\n                                        </div>\r\n                                        <div className='field num-w'>\r\n                                            <label>End Range Today</label>\r\n                                            <input\r\n                                                type='checkbox'\r\n                                                name='endToday'\r\n                                                className='form-control date-input endToday'\r\n                                                value={this.state.endToday}\r\n                                                onChange={this.handleInputChange} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='field form-sec'>\r\n                            <label>Terms</label>\r\n                            <input\r\n                                type='text'\r\n                                name='terms'\r\n                                className={`'form-control ' \r\n                                ${this.state.err.terms ? 'inval' : ''}`}\r\n                                placeholder='Terms'\r\n                                onChange={this.handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div className='container for-sec'>\r\n                        <button className=\"ui btn btn-primary btn-block\" type=\"submit\">Submit</button>\r\n                        <GoogleLogin\r\n                            clientId=\"135294837231-342jgurpklaa1nhg563a986ethc2kdev.apps.googleusercontent.com\"\r\n                            buttonText=\"Login\"\r\n                            onSuccess={responseGoogle}\r\n                            onFailure={responseGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />,\r\n                        {this.state.showPopup ?\r\n                            <WorkingPopup\r\n                                text='Working on the Query'\r\n                                backToQuery={this.togglePopup.bind(this)}\r\n                                newQuery={this.handleNewQuery.bind(this)}\r\n                                folderLink={this.state.folderLink}\r\n                            />\r\n                            : null}\r\n                    </div>\r\n                    {/* <div className = 'container for-sec'>\r\n                        <button className=\"ui btn btn-primary btn-block\" type=\"submit\">Submit</button>\r\n                    </div> */}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","\r\n\r\nimport React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport history from './../history';\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\nimport QueryForm from './QueryForm'\r\nimport logo from './../logo.svg';\r\n\r\nexport default class App extends Component {\r\n    constructor(props){\r\n        super(props);  \r\n        this.state = { };\r\n\r\n    }\r\n    // handlesignin(){\r\n    //     auth2.grantOfflineAccess().then(signInCallback);\r\n    // }\r\n    render() {\r\n        return (\r\n            <div className='container page-container'>\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <p>\r\n                        Welcome to the Health Trends App!\r\n        </p>\r\n                    <p>Dr. John Nakayama and Madison Hillyard</p>\r\n                    <form>\r\n                        <Button variant=\"btn btn-success\" onClick={() => history.push('/QueryTrends')}>Make a Health Trends Query</Button>\r\n                    </form>\r\n                    <form>\r\n                        <Button  variant=\"btn btn-success\" onClick={() => history.push('/CovidMap')}>Make a Health Trends Query</Button>\r\n                    </form>\r\n                </header>\r\n                {/* <div className = 'content-wrap'>\r\n                    <Header/>\r\n                    <div className = 'container'>\r\n                        <QueryForm />\r\n                    </div>\r\n                    <Footer/>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nexport default class CovidMap extends Component {\r\n    render() {\r\n       return (\r\n          <div className ='container ui'>\r\n              <div className = 'header'>\r\n                  <div>\r\n                      <h1>\r\n                          Health API Research Tool\r\n                      </h1>\r\n                  </div>\r\n                \r\n              </div>\r\n          </div>\r\n       )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport history from './history';\r\nimport QueryForm from './components/QueryForm'\r\nimport App from \"./components/App\"\r\nimport CovidMap from \"./components/CovidMap\"\r\n\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={App} />\r\n                    <Route path=\"/QueryTrends\" component={QueryForm} />\r\n                    <Route path=\"/CovidMap\" component={CovidMap} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}