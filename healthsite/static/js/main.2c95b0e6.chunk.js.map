{"version":3,"sources":["history.js","components/WorkingPopup.jsx","components/QueryForm.jsx","components/App.jsx","components/MapChart.jsx","components/Map.jsx","Routes.js","components/Header.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["history","WorkingPopup","props","message","this","folderLink","href","className","text","onClick","backToQuery","newQuery","React","Component","$","require","numRegex","dateRegex","QueryForm","successResGoogle","response","d","query","handleSubmit","console","log","axios","defaults","xsrfCookieName","xsrfHeaderName","post","then","res","alert","data","failureResGoogle","err","error","details","state","showPopup","folder","spreadsheet","numRuns","freq","geo","geo_level","startDate","endDate","numWeek","endToday","terms","getFolderLink","bind","handleInputChange","handleDateChange","handleEndTodayChange","handleNumWeekChange","get","window","location","e","target","name","value","length","test","isFuture","parse","Date","parseInt","setState","format","addWeeks","subWeeks","differenceInWeeks","loc_end","valid","Object","values","forEach","val","num_runs","start_date","end_date","validateInputs","preventDefault","togglePopup","role","onSubmit","type","placeholder","onChange","multiple","defaultValue","geoCodes","region","map","obj","key","code","dma","clientId","buttonText","onSuccess","onFailure","cookiePolicy","accessType","responseType","scope","handleNewQuery","App","src","logo","alt","Button","variant","push","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","MapChart","projection","geography","geographies","rsmKey","stroke","fill","style","default","outline","hover","pressed","centroid","geoCentroid","cur","allStates","find","s","id","keys","indexOf","coordinates","y","fontSize","textAnchor","subject","dx","dy","x","alignmentBaseline","Map","Routes","path","exact","component","Header","Footer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.2c95b0e6.chunk.js","sourcesContent":["import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React from 'react';    \r\n\r\nexport default class WorkingPopup extends React.Component {  \r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        const folderLink = this.props.folderLink;\r\n        let message;\r\n        if(folderLink){\r\n            message = <h3 href = {this.props.folderLink}>Folder Link</h3>;\r\n        } else {\r\n            message = <h3 className = 'status-bar'>working...</h3>;\r\n        }\r\n        return (  \r\n            <div className='popup'>  \r\n                <div className='popup-inner'> \r\n                    <div className='pi'>\r\n                        <div className = 'pi1'>\r\n                            <h1>{this.props.text}</h1>  \r\n                            <div>\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                        <div className = 'pi2'>\r\n                            <div className = ''>\r\n                                <button className = 'ui btn btn-primary btn-block' onClick={this.props.backToQuery}>Go Back to Query</button>\r\n                            </div>\r\n                            <div className = ''>\r\n                                <button className = 'ui btn btn-primary btn-block' onClick={this.props.newQuery}>New Query</button>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                </div>  \r\n            </div>  \r\n        );  \r\n    }  \r\n}  \r\n","import React, { Component } from 'react';\r\n// import DateInput from './DateInput';\r\nimport WorkingPopup from './WorkingPopup';\r\nimport { format, addWeeks, subWeeks, parse, isFuture, differenceInWeeks } from 'date-fns'\r\nimport axios from \"axios\";\r\nimport GoogleLogin from 'react-google-login';\r\n// import getCookie from './../helper';\r\n\r\nimport geoCodes from './../data/geo_code.json'\r\n\r\n\r\nvar $ = require('jquery');\r\nvar numRegex = /^\\d+/;\r\nvar dateRegex = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/;\r\n\r\nexport default class QueryForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPopup: false,\r\n            folderLink: '',\r\n            folder: '',\r\n            spreadsheet: '',\r\n            numRuns: '',\r\n            freq: 'week',\r\n            geo: 'us',\r\n            geo_level: 'country',\r\n            startDate: '',\r\n            endDate: '',\r\n            numWeek: '',\r\n            endToday: false,\r\n            terms: '',\r\n            err: {\r\n                folder: '',\r\n                spreadsheet: '',\r\n                numRuns: '',\r\n                geo: '',\r\n                geo_level: '',\r\n                startDate: '',\r\n                endDate: '',\r\n                numWeek: '',\r\n                terms: '',\r\n            }\r\n        };\r\n\r\n        this.getFolderLink = this.getFolderLink.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleEndTodayChange = this.handleEndTodayChange.bind(this);\r\n        this.handleNumWeekChange = this.handleNumWeekChange.bind(this);\r\n        this.newQuery = this.newQuery.bind(this);\r\n    }\r\n    successResGoogle = (response) => {\r\n        var query = this.handleSubmit();\r\n        var d = { response, query };\r\n        console.log(d);\r\n        axios.defaults.xsrfCookieName = 'csrftoken';\r\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\n        axios\r\n            //.post(\"http://127.0.0.1:8000/query\", d)\r\n            .post(\"https://healthcare-trends.appspot.com/query\", d)\r\n            .then(res => {\r\n                alert(res.data);\r\n            });\r\n    }\r\n    failureResGoogle = (response) => {\r\n        //Error Handling for Google Auth Api\r\n        var err = 'Query could not be performed: ';\r\n        if (response.error === 'popup_closed_by_user') {\r\n            err += \"The user closed the popup before finishing the sign in flow.\";\r\n        }\r\n        else if (response.error === 'idpiframe_initialization_failed') {\r\n            err += \"Initialization of the Google Auth API failed.\\nPlease enable Third Party Cookies\";\r\n        }\r\n        else if (response.error === 'access_denied') {\r\n            err += \"The user denied the permission to the scopes required\";\r\n        }\r\n        else if (response.error === 'immediate_failed') {\r\n            err += \"No user could be automatically selected without prompting the consent flow.\\nPlease Contact your developer\"\r\n        }\r\n        else {\r\n            err += response.error + \" : \" + response.details;\r\n        }\r\n        alert(err);\r\n    }\r\n    getFolderLink() {\r\n        $.get(window.location.href + 'api/submit', (data) => {\r\n            console.log(data);\r\n            //    this.personaliseGreeting(data);\r\n        });\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        const { name, value } = e.target;\r\n        let err = this.state.err;\r\n        console.log(name, value);\r\n        switch (name) {\r\n            case 'folder':\r\n                err.folder =\r\n                    value.length >= 1\r\n                        ? ''\r\n                        : 'Folder must be named';\r\n                break;\r\n            case 'spreadsheet':\r\n                err.spreadsheet =\r\n                    value.length >= 1\r\n                        ? ''\r\n                        : 'Spreadsheet must be named';\r\n                break\r\n            case 'terms':\r\n                err.terms =\r\n                    value.length >= 1\r\n                        ? ''\r\n                        : 'Terms must be added to search, separated by commas';\r\n                break\r\n            case 'numRuns':\r\n                err.numRuns =\r\n                    numRegex.test(value)\r\n                        ? ''\r\n                        : 'Must be a Number';\r\n                break;\r\n            case 'endToday':\r\n                this.handleEndTodayChange(value);\r\n                break;\r\n            case 'startDate':\r\n                err.startDate =\r\n                    dateRegex.test(value)\r\n                        ? isFuture(parse(value, 'MM/dd/yyyy', new Date()))\r\n                            ? 'Date cannot be a future date'\r\n                            : ''\r\n                        : 'Date must be in MM/DD/YYYY format';\r\n                if (err.startDate === 'Date cannot be a future date') {\r\n                    alert(err.startDate);\r\n                }\r\n                else {\r\n                    this.handleDateChange(name, value, err);\r\n                }\r\n\r\n                break;\r\n            case 'endDate':\r\n                err.endDate =\r\n                    dateRegex.test(value)\r\n                        ? isFuture(parse(value, 'MM/dd/yyyy', new Date()))\r\n                            ? 'Date cannot be a future date'\r\n                            : ''\r\n                        : 'Date must be in MM/DD/YYYY format';\r\n                if (err.endDate === 'Date cannot be a future date') {\r\n                    alert(err.endDate);\r\n                }\r\n                else {\r\n                    this.handleDateChange(name, value, err);\r\n                }\r\n\r\n                break;\r\n            case 'numWeek':\r\n                err.numWeek =\r\n                    (parseInt(value) > 0 || !value) //maybe a or statement??\r\n                        ? ''\r\n                        : 'Number must be positive';\r\n                if (err.numWeek) {\r\n                    alert(err.numWeek);\r\n                }\r\n                else {\r\n                    this.handleNumWeekChange(value, err);\r\n                }\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            err,\r\n            [name]: value\r\n        });\r\n        console.log(err)\r\n    }\r\n\r\n    handleNumWeekChange(value, err) {\r\n        if (this.state.startDate && !this.state.err.startDate) {\r\n            var endDate = format(addWeeks(parse(this.state.startDate, 'MM/dd/yyyy', new Date()), value), \"P\");\r\n            err.numWeek = isFuture(parse(this.state.endDate, 'MM/dd/yyyy', new Date())) ? 'End date cannot be a future date' : '';\r\n            if (!err.numWeek) {\r\n                this.setState({\r\n                    endDate: endDate\r\n                });\r\n            }\r\n        }\r\n        else if (this.state.endDate && !this.state.err.endDate) {\r\n            var startDate = format(subWeeks(parse(this.state.endDate, 'MM/dd/yyyy', new Date()), value), \"P\");\r\n            this.setState({\r\n                startDate: startDate\r\n            });\r\n        }\r\n        else if (!this.state.endDate && !this.state.err.endDate) {\r\n            var endDate = format(subWeeks(new Date(), value - 1), \"P\");\r\n            var startDate = format(subWeeks(parse(endDate, 'MM/dd/yyyy', new Date()), value), \"P\");\r\n            this.setState({\r\n                startDate: startDate,\r\n                endDate: endDate\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDateChange(name, value, err) {\r\n        if (!this.state.err.startDate && !this.state.err.endDate) {\r\n            var endDate = this.state.endDate;\r\n            var startDate = this.state.startDate;\r\n            var numWeek = this.state.numWeek;\r\n            //if endDate\r\n            if (this.state.startDate && name === 'endDate') {\r\n                endDate = value;\r\n                numWeek = differenceInWeeks(parse(endDate, 'MM/dd/yyyy', new Date()), parse(startDate, 'MM/dd/yyyy', new Date()))\r\n            }\r\n            //if stateDate\r\n            if (this.state.endDate && name === 'startDate') {\r\n                startDate = value;\r\n                numWeek = differenceInWeeks(parse(endDate, 'MM/dd/yyyy', new Date()), parse(startDate, 'MM/dd/yyyy', new Date()))\r\n            }\r\n\r\n            //if startDate is after endDate \r\n            err.numWeek =\r\n                (numWeek > 0 && numWeek)\r\n                    ? ''\r\n                    : 'Start Date must be before End Date';\r\n            if (err.numWeek && startDate && endDate) {\r\n                alert(err.numWeek);\r\n            }\r\n            this.setState({\r\n                err,\r\n                numWeek: numWeek\r\n            });\r\n        }\r\n        return;\r\n    }\r\n\r\n    handleEndTodayChange(value) {\r\n        if (value) {\r\n            var loc_end = format(new Date(), \"P\");\r\n            this.setState({\r\n                endDate: loc_end\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInputs(err) {\r\n        let valid = true;\r\n        Object.values(err).forEach(\r\n            (val) => val.length > 0 && (valid = false)\r\n        );\r\n        if (!(this.state.folder\r\n            && this.state.spreadsheet\r\n            && this.state.numRuns\r\n            && this.state.startDate\r\n            && this.state.endDate\r\n            && this.state.terms)) {\r\n            valid = false;\r\n        }\r\n        return valid;\r\n    }\r\n\r\n    handleSubmit(e) {\r\n\r\n        // e.preventDefault();\r\n        var folder = this.state.folder;\r\n        var spreadsheet = this.state.spreadsheet;\r\n        var numRuns = this.state.numRuns;\r\n        var freq = this.state.freq;\r\n        var geo = this.state.geo;\r\n        var geo_level = this.state.geo_level;\r\n        var startDate = this.state.startDate;\r\n        var endDate = this.state.endDate\r\n        var terms = this.state.terms;\r\n\r\n        var data = {\r\n            query: {\r\n                folder: folder,\r\n                spreadsheet: spreadsheet,\r\n                num_runs: numRuns,\r\n                freq: freq,\r\n                geo: geo,\r\n                geo_level: geo_level,\r\n                start_date: startDate,\r\n                end_date: endDate,\r\n                terms: terms\r\n            }\r\n        };\r\n\r\n        console.log('DATA', data);\r\n\r\n        if (this.validateInputs(this.state.err)) {\r\n            // this.togglePopup(e);\r\n            return data;\r\n        } else {\r\n            alert('Some fields have not been filled.');\r\n            return null;\r\n        }\r\n    };\r\n\r\n    togglePopup(e) {\r\n        e.preventDefault();\r\n        console.log(\"TOGGLE POPUP\");\r\n        let val = this.validateInputs(this.state.err);\r\n        console.log(val);\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    };\r\n\r\n    newQuery() {\r\n        let err = this.state.err;\r\n        err.folder = '';\r\n        err.spreadsheet = '';\r\n        err.numRuns = '';\r\n        err.startDate = '';\r\n        err.endDate = '';\r\n        err.numWeek = '';\r\n        err.terms = '';\r\n        err.geo_level = '';\r\n        err.geo = '';\r\n        this.setState({\r\n            spreadsheet: '',\r\n            numRuns: '',\r\n            freq: '',\r\n            geo: '',\r\n            geo_level: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            numWeek: '',\r\n            endToday: false,\r\n            terms: '',\r\n        });\r\n    }\r\n\r\n    handleNewQuery(e) {\r\n        e.preventDefault();\r\n        console.log('in Handle new Query')\r\n        this.newQuery();\r\n        this.togglePopup(e);\r\n        console.log('end of handleNew query')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container text-box'>\r\n                <form className='ui form container' role='form' onSubmit={this.handleSubmit}>\r\n                    <h2>File Setup</h2>\r\n                    <div className='container drive-sec'>\r\n                        <div className='field'>\r\n                            <div className='label'>\r\n                                <label>Folder Name</label>\r\n                            </div>\r\n                            <div >\r\n                                <input\r\n                                    type='text'\r\n                                    name='folder'\r\n                                    className={`form-control ' \r\n                                    ${this.state.err.folder ? 'inval' : ''}`}\r\n                                    placeholder='Folder Name'\r\n                                    onChange={this.handleInputChange} />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='field'>\r\n                            <div className='label'>\r\n                                <label>Spreadsheet Name</label>\r\n                            </div>\r\n                            <div>\r\n                                <input\r\n                                    type='text'\r\n                                    name='spreadsheet'\r\n                                    className={`form-control ' \r\n                                        ${this.state.err.spreadsheet ? 'inval' : ''}`}\r\n                                    placeholder='Spreadsheet Name'\r\n                                    onChange={this.handleInputChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <h2>Query</h2>\r\n                    <div className='container query-sec'>\r\n                        <div className='form-sec form-sec-row'>\r\n                            <div className='field'>\r\n                                <label>Number of Runs </label>\r\n                                <input\r\n                                    type='text'\r\n                                    name='numRuns'\r\n                                    className={`form-control num-runs ' \r\n                                    ${this.state.err.numRuns ? 'inval' : ''}`}\r\n                                    placeholder='Number of Runs'\r\n                                    onChange={this.handleInputChange} />\r\n                            </div>\r\n                            <div className='field'>\r\n                                <label>Frequency</label>\r\n                                <select multiple=\"\" name='freq' className='ui dropdown form-control' onChange={this.handleInputChange}>\r\n                                    <option defaultValue value=\"week\">Week</option>\r\n                                    <option value=\"day\">Day</option>\r\n                                    <option value=\"month\">Month</option>\r\n                                    <option value=\"year\">Year</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='field'>\r\n                                <label>Geographical Level</label>\r\n                                <select multiple=\"\" name='geo_level' className='ui dropdown form-control' onChange={this.handleInputChange}>\r\n                                    <option defaultValue value=\"country\">Country</option>\r\n                                    <option value=\"region\">Region</option>\r\n                                    <option value=\"dma\">Nielsen DMA</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='field'>\r\n                                <label>Geographical Area </label>\r\n                                <select multiple=\"\" name='geo' className='ui dropdown form-control' onChange={this.handleInputChange}>\r\n                                    {this.state.geo_level === 'country'\r\n                                        ? <option defaultValue value=\"US\">US</option>\r\n                                        : this.state.geo_level === 'region'\r\n                                            ?geoCodes.region.map((obj) =>\r\n                                                <option key={obj.code} value={obj.code}>{obj.name} ({obj.code})</option>) \r\n                                            : this.state.geo_level === 'dma'\r\n                                                ?geoCodes.dma.map((obj) => \r\n                                                <option key={obj.code} value={obj.code}>{obj.name} ({obj.code})</option>)\r\n                                                :null\r\n                                    };\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-sec'>\r\n                            <div className='form-sec date-level'>\r\n\r\n                                <div className='form-sec-row'>\r\n                                    <div className='field'>\r\n                                        <label>Start Date</label>\r\n                                        <input\r\n                                            type='text'\r\n                                            name='startDate'\r\n                                            className={`form-control date-input \r\n                                                ${this.state.err.startDate ? 'inval' : ''}`}\r\n                                            placeholder='mm/dd/yyyy'\r\n                                            value={this.state.startDate}\r\n                                            onChange={this.handleInputChange} />\r\n                                    </div>\r\n                                    <div className='field'>\r\n                                        <label>End Date</label>\r\n                                        <input\r\n                                            type='text'\r\n                                            name='endDate'\r\n                                            className={`form-control date-input \r\n                                                ${this.state.err.endDate ? 'inval' : ''}`}\r\n                                            placeholder='mm/dd/yyyy'\r\n                                            value={this.state.endDate}\r\n                                            onChange={this.handleInputChange} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className='d1'>\r\n                                    <div className='field date-level date-in'>\r\n                                        <label>Number of Weeks</label>\r\n                                        <input\r\n                                            type='text'\r\n                                            name='numWeek'\r\n                                            className={`form-control num-week-input date-input'\r\n                                                ${this.state.err.numWeek ? 'inval' : ''}`}\r\n                                            placeholder='# Weeks'\r\n                                            value={this.state.numWeek}\r\n                                            onChange={this.handleInputChange} />\r\n                                    </div>\r\n                                    {/* <div className='field num-w'>\r\n                                            <label>End Range Today</label>\r\n                                            <input\r\n                                                type='checkbox'\r\n                                                name='endToday'\r\n                                                className='form-control date-input endToday'\r\n                                                value={this.state.endToday}\r\n                                                onChange={this.handleInputChange} />\r\n                                        </div> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='field form-sec'>\r\n                            <div className='label'>\r\n                                <label>Terms</label>\r\n                            </div>\r\n                            <textarea\r\n                                type='text'\r\n                                name='terms'\r\n                                className={`form-control ' \r\n                                ${this.state.err.terms ? 'inval' : ''}`}\r\n                                placeholder='Terms'\r\n                                onChange={this.handleInputChange} />\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div className='container for-sec'>\r\n                        {/* <button className=\"ui btn btn-primary btn-block\" type=\"submit\">Submit</button> */}\r\n                        <GoogleLogin\r\n                            clientId=\"135294837231-342jgurpklaa1nhg563a986ethc2kdev.apps.googleusercontent.com\"\r\n                            buttonText=\"Submit Query and Connect to Google Account\"\r\n                            onSuccess={this.successResGoogle}\r\n                            onFailure={this.failureResGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                            accessType=\"offline\"\r\n                            responseType=\"code\"\r\n                            scope={'https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/spreadsheets https://www.googleapis.com/auth/documents'}\r\n                        />\r\n                        {this.state.showPopup ?\r\n                            <WorkingPopup\r\n                                text='Working on the Query'\r\n                                backToQuery={this.togglePopup.bind(this)}\r\n                                newQuery={this.handleNewQuery.bind(this)}\r\n                                folderLink={this.state.folderLink}\r\n                            />\r\n                            : null}\r\n                    </div>\r\n                    {/* <div className = 'container for-sec'>\r\n                        <button className=\"ui btn btn-primary btn-block\" type=\"submit\">Submit</button>\r\n                    </div> */}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","\r\n\r\nimport React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport history from './../history';\r\nimport logo from './../logo.svg';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n    }\r\n    // handlesignin(){\r\n    //     auth2.grantOfflineAccess().then(signInCallback);\r\n    // }\r\n    render() {\r\n        return (\r\n            <div className='container page-container'>\r\n                {/* <header className=\"App-header\"> */}\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <div>\r\n                    <h1>Welcome to the Health Trends App!</h1>\r\n                    <h2>Researcher: Dr. John Nakayama</h2>\r\n                    <h3>Developer: Madison Hillyard</h3>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className='query-button'>\r\n                        <form>\r\n                            <Button variant=\"ui btn btn-primary btn-block\" onClick={() => history.push('/QueryTrends')}>Make a Health Trends Query</Button>\r\n                        </form>\r\n                    </div>\r\n                    <div className='map-button'>\r\n                        <form>\r\n                            <Button variant=\"ui btn btn-primary btn-block\" onClick={() => history.push('/Map')}>Check out our Covid Map</Button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { geoCentroid } from \"d3-geo\";\r\nimport {\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography,\r\n    Marker,\r\n    Annotation\r\n} from \"react-simple-maps\";\r\n\r\nimport allStates from \"./../data/allstates.json\";\r\n\r\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\nconst offsets = {\r\n    VT: [50, -8],\r\n    NH: [34, 2],\r\n    MA: [30, -1],\r\n    RI: [28, 2],\r\n    CT: [35, 10],\r\n    NJ: [34, 1],\r\n    DE: [33, 0],\r\n    MD: [47, 10],\r\n    DC: [49, 21]\r\n};\r\n\r\nexport default class MapChart extends Component {\r\n    render() {\r\n        return (\r\n            <ComposableMap projection=\"geoAlbersUsa\">\r\n                <Geographies geography={geoUrl}>\r\n                    {({ geographies }) => (\r\n                        <>\r\n                            {geographies.map(geo => (\r\n                                <Geography\r\n                                    key={geo.rsmKey}\r\n                                    stroke=\"#FFF\"\r\n                                    geography={geo}\r\n                                    fill=\"#DDD\"\r\n                                    style={{\r\n                                        default: {\r\n                                          fill: \"#D6D6DA\",\r\n                                          outline: \"none\"\r\n                                        },\r\n                                        hover: {\r\n                                          fill: \"#F53\",\r\n                                          outline: \"none\"\r\n                                        },\r\n                                        pressed: {\r\n                                          fill: \"#E42\",\r\n                                          outline: \"none\"\r\n                                        }\r\n                                      }}\r\n                                />\r\n                            ))}\r\n                            {geographies.map(geo => {\r\n                                const centroid = geoCentroid(geo);\r\n                                const cur = allStates.find(s => s.val === geo.id);\r\n                                return (\r\n                                    <g key={geo.rsmKey + \"-name\"}>\r\n                                        {cur &&\r\n                                            centroid[0] > -160 &&\r\n                                            centroid[0] < -67 &&\r\n                                            (Object.keys(offsets).indexOf(cur.id) === -1 ? (\r\n                                                <Marker coordinates={centroid}>\r\n                                                    <text y=\"2\" fontSize={14} textAnchor=\"middle\">\r\n                                                        {cur.id}\r\n                                                    </text>\r\n                                                </Marker>\r\n                                            ) : (\r\n                                                    <Annotation\r\n                                                        subject={centroid}\r\n                                                        dx={offsets[cur.id][0]}\r\n                                                        dy={offsets[cur.id][1]}\r\n                                                    >\r\n                                                        <text x={4} fontSize={14} alignmentBaseline=\"middle\">\r\n                                                            {cur.id}\r\n                                                        </text>\r\n                                                    </Annotation>\r\n                                                ))}\r\n                                    </g>\r\n                                );\r\n                            })}\r\n                        </>\r\n                    )}\r\n                </Geographies>\r\n            </ComposableMap>\r\n        );\r\n    };\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport MapChart from './MapChart';\r\n\r\nexport default class Map extends Component {\r\n    render() {\r\n        return (\r\n            <div className='container ui'>\r\n                <div className='header'>\r\n                    <div>\r\n                        <h1>\r\n                            Covid Map\r\n                      </h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"map-page\">\r\n                    <div className=\"map-container\">\r\n                    <h3>Map Box</h3>\r\n                    \r\n                    </div>\r\n                    <div className= \"control-panel\">\r\n                    <h3>Control Panel</h3>\r\n                    <div>\r\n                        <label>Term Sets</label>\r\n                        <select multiple=\"\" name='terms' className='ui dropdown form-control' onChange={this.handleInputChange}>\r\n                                    <option defaultValue value=\"bca\">Breast Cancer Terms</option>\r\n                                    <option value=\"covid\">COVID 19 Terms</option>\r\n                                    <option value=\"ect\">ECT..</option>\r\n                        </select>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n      <MapChart />\r\n    </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport history from './history';\r\nimport QueryForm from './components/QueryForm'\r\nimport App from \"./components/App\"\r\nimport Map from \"./components/Map\"\r\n\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={App} />\r\n                    <Route path=\"/QueryTrends\" component={QueryForm} />\r\n                    <Route path=\"/Map\" component={Map} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nexport default class Header extends Component {\r\n    render() {\r\n       return (\r\n          <div className ='container ui'>\r\n              <div className = 'header'>\r\n                  <div>\r\n                      <h1>\r\n                          Health API Research Tool\r\n                      </h1>\r\n                  </div>\r\n                \r\n              </div>\r\n          </div>\r\n       )\r\n    }\r\n}","import React, { Component } from 'react';\r\nexport default class Footer extends Component {\r\n    render() {\r\n       return (\r\n          <div className = 'container ui'>\r\n              <div className = 'footer'>\r\n                  <div>\r\n                      Need Help? email me here\r\n                  </div>\r\n                \r\n              </div>\r\n          </div>\r\n       )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Routes from './Routes';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nfunction App() {\n  return (\n    <div className=\"App page-container\">\n      <Header />\n      <Routes />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}